{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ngaje\\\\Desktop\\\\ProjektPrGeo\\\\projekt-zajecia\\\\src\\\\weather\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport './Weather.css';\nimport WeatherCard from './WeatherCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  // react hook on state\n  const [danePogodowe, setDanePogodowe] = useState([]);\n  useEffect(() => {\n    const getData = () => {\n      axios.get('https://danepubliczne.imgw.pl/api/data/synop/').then(dane => {\n        console.log(dane.data);\n        setDanePogodowe(dane.data);\n      }).catch(error => {\n        console.log(error);\n        return null;\n      });\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather_header\",\n      children: \"Dane pogodowe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather_block\",\n      children: danePogodowe.map(_ref => {\n        let {\n          id_stacji,\n          stacja,\n          temperatura,\n          cisnienie\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(WeatherCard, {\n          stacja: stacja,\n          temperatura: temperatura,\n          cisnienie: cisnienie\n        }, id_stacji, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 36\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"0V+RWdyRYUrF6juN59hrEKAezSw=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["axios","React","useEffect","useState","WeatherCard","jsxDEV","_jsxDEV","Weather","_s","danePogodowe","setDanePogodowe","getData","get","then","dane","console","log","data","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","id_stacji","stacja","temperatura","cisnienie","_c","$RefreshReg$"],"sources":["C:/Users/ngaje/Desktop/ProjektPrGeo/projekt-zajecia/src/weather/Weather.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport './Weather.css'\r\nimport WeatherCard from './WeatherCard'\r\n\r\nfunction Weather() {\r\n    // react hook on state\r\n    const [danePogodowe, setDanePogodowe] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = () => {\r\n            axios\r\n                .get('https://danepubliczne.imgw.pl/api/data/synop/')\r\n                .then(\r\n                    (dane) => {\r\n                        console.log(dane.data);\r\n                        setDanePogodowe(dane.data)\r\n                    })\r\n                .catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                        return null;\r\n                    })\r\n        }\r\n        getData();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className='weather_header'>Dane pogodowe</div>\r\n\r\n            <div className='weather_block'>\r\n                {\r\n                    danePogodowe.map(\r\n                        ({ id_stacji, stacja, temperatura, cisnienie }) => {\r\n                            return <WeatherCard\r\n                                key={id_stacji}\r\n                                stacja={stacja}\r\n                                temperatura={temperatura}\r\n                                cisnienie={cisnienie} />\r\n                        })\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Weather"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAO,eAAe;AACtB,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IAEZ,MAAMS,OAAO,GAAGA,CAAA,KAAM;MAClBX,KAAK,CACAY,GAAG,CAAC,+CAA+C,CAAC,CACpDC,IAAI,CACAC,IAAI,IAAK;QACNC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC;QACtBP,eAAe,CAACI,IAAI,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,CACLC,KAAK,CACDC,KAAK,IAAK;QACPJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;QAClB,OAAO,IAAI;MACf,CAAC,CAAC;IACd,CAAC;IACDR,OAAO,CAAC,CAAC;EAEb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEnDnB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAD,QAAA,EAEtBX,YAAY,CAACiB,GAAG,CACZC,IAAA,IAAmD;QAAA,IAAlD;UAAEC,SAAS;UAAEC,MAAM;UAAEC,WAAW;UAAEC;QAAU,CAAC,GAAAJ,IAAA;QAC1C,oBAAOrB,OAAA,CAACF,WAAW;UAEfyB,MAAM,EAAEA,MAAO;UACfC,WAAW,EAAEA,WAAY;UACzBC,SAAS,EAAEA;QAAU,GAHhBH,SAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGS,CAAC;MAChC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAACjB,EAAA,CA1CQD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA4ChB,eAAeA,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}