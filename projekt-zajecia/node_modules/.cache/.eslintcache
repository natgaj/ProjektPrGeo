[{"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\index.js":"1","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\App.js":"2","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\reportWebVitals.js":"3","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\home\\Home.js":"4","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\Map.js":"5","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\Icon.js":"6","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\MarkerPlacement.js":"7","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\services\\Services.js":"8","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\Weather.js":"9","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherCard.js":"10","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherHeader.js":"11","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherBlockOfCards.js":"12","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\bspLib\\BspReview.js":"13","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\bspLib\\bsp_data.js":"14"},{"size":535,"mtime":1684402333507,"results":"15","hashOfConfig":"16"},{"size":970,"mtime":1687443234227,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1684402333923,"results":"18","hashOfConfig":"16"},{"size":985,"mtime":1685696393928,"results":"19","hashOfConfig":"16"},{"size":3459,"mtime":1687442204921,"results":"20","hashOfConfig":"16"},{"size":275,"mtime":1685623717924,"results":"21","hashOfConfig":"16"},{"size":1423,"mtime":1687444605343,"results":"22","hashOfConfig":"16"},{"size":1760,"mtime":1687444603430,"results":"23","hashOfConfig":"16"},{"size":1078,"mtime":1686830687017,"results":"24","hashOfConfig":"16"},{"size":492,"mtime":1686830950705,"results":"25","hashOfConfig":"16"},{"size":211,"mtime":1686830689580,"results":"26","hashOfConfig":"16"},{"size":757,"mtime":1686830680378,"results":"27","hashOfConfig":"16"},{"size":4891,"mtime":1687446271399,"results":"28","hashOfConfig":"16"},{"size":4760,"mtime":1687443325415,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1jnitwo",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\index.js",[],[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\App.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\reportWebVitals.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\home\\Home.js",[],[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\Map.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\Icon.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\map\\MarkerPlacement.js",["78"],[],"import React, { useState } from 'react'\r\nimport { Circle, Marker, Popup, useMapEvent } from 'react-leaflet'\r\nimport { dronIcon } from './Icon'\r\n\r\nfunction MarkerPlacement() {\r\n    const [position, setPosition] = useState(null)\r\n    const [mass, setMass] = useState(0)\r\n\r\n    const promien = (mass) => {\r\n        console.log(Math.pow(mass, 1 / 3) / Math.pow(80 / 980, 1 / 1.89))\r\n        return Math.pow(mass, 1 / 3) / Math.pow(80 / 980, 1 / 1.89)\r\n    }\r\n\r\n    const map = useMapEvent({\r\n        click: (e) => {\r\n            console.log(e.latlng.lng)\r\n            setPosition(e.latlng)\r\n        }\r\n    })\r\n\r\n    return position === null ? null : (\r\n        <div>\r\n            <Marker icon={dronIcon} position={position}>\r\n                <Popup >\r\n                    Podaj masę ładunku wybuchowego w kg\r\n                    <input\r\n                        type='range'\r\n                        min=\"0\"\r\n                        max=\"200\"\r\n                        defaultValue=\"0\"\r\n                        onChange={e => setMass(e.target.value)}\r\n\r\n                    />\r\n                    {mass} kg\r\n                </Popup>\r\n                <Circle\r\n                    center={position}\r\n                    radius={promien(mass)}\r\n                    pathOptions={{ color: 'red' }}\r\n                >\r\n                </Circle>\r\n\r\n            </Marker>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MarkerPlacement","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\services\\Services.js",["79"],[],"import React from \"react\";\r\nimport \"./Services.css\";\r\nimport Map from \"../map/Map\";\r\nimport { Link } from \"react-router-dom\";\r\nimport zdjecie1 from \"./dziekan.jpg\";\r\nimport zdjecie2 from \"./biblioteka.jpg\";\r\nimport zdjecie3 from \"./promocja.jpg\";\r\nimport zdjecie4 from \"./sztab.jpg\";\r\n\r\nimport ListIcon from '@mui/icons-material/List';\r\nimport Button from '@mui/material/Button';\r\n\r\nfunction Services() {\r\n    return (\r\n        <div className=\"services_main\">\r\n            <div className=\"services_bottom\">\r\n                <div className=\"services_left\">\r\n                    <h1 className=\"services_title\">DOSTĘPNE USŁUGI </h1>\r\n\r\n                    <Link to=\"map\">\r\n                        <button className=\"services_button\">Mapa </button>\r\n                    </Link>\r\n\r\n                    <Link to=\"bazabsp\">\r\n                        <Button className=\"services_button\"><ListIcon />Baza BSP </Button>\r\n                    </Link>\r\n\r\n                    <Link to=\"weather\">\r\n                        <button className=\"services_button\"> Poka Poka Pogodę </button>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"services_right\">\r\n                    <div>\r\n                        <img className=\"services_logo1\" src={zdjecie1} alt=\"logo1\" />{\" \"}\r\n                        <img className=\"services_logo2\" src={zdjecie2} alt=\"logo2\" />\r\n                        <div>\r\n                            <img className=\"services_logo3\" src={zdjecie3} alt=\"logo3\" />{\" \"}\r\n                            <img className=\"services_logo4\" src={zdjecie4} alt=\"logo4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Services;","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\Weather.js",["80"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport './Weather.css'\r\nimport WeatherCard from './WeatherCard'\r\nimport WeatherHeader from './WeatherHeader'\r\nimport WeatherBlockOfCards from './WeatherBlockOfCards'\r\n\r\nfunction Weather() {\r\n    // react hook on state\r\n    const [danePogodowe, setDanePogodowe] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const getData = () => {\r\n            axios\r\n                .get('https://danepubliczne.imgw.pl/api/data/synop/')\r\n                .then(\r\n                    (dane) => {\r\n                        console.log(dane.data);\r\n                        setDanePogodowe(dane.data)\r\n                    })\r\n                .catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                        return null;\r\n                    })\r\n        }\r\n        getData();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <WeatherHeader />\r\n            <WeatherBlockOfCards danePogodowe={danePogodowe} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherCard.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherHeader.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\weather\\WeatherBlockOfCards.js",[],[],"C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\bspLib\\BspReview.js",["81","82"],[],"import React, { useState } from \"react\";\r\n\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ManageSearchIcon from \"@mui/icons-material/ManageSearch\";\r\nimport { BSP_data } from \"./bsp_data\";\r\nimport { getItem } from \"localforage\";\r\n\r\nfunction List_rewiev() {\r\n    const [value, setValue] = useState(0)\r\n    const filterd_data = BSP_data.filter(item => item.prop.key == value)\r\n    const style = {\r\n        border: \"2px solid grey\",\r\n        borderRadius: \"5px\",\r\n        margin: \"1vh 1vw\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n    };\r\n    return (\r\n        <div>\r\n            <input type='range' min='0' max='2' onChange={e => { console.log(e.target.value); setValue(e.target.value) }} />\r\n            <h1>LISTA DRONÓW</h1>\r\n            <div className=\"block_review\" style={style}>\r\n                {\r\n                    <TableContainer component={Paper}>\r\n                        <Table\r\n                            sx={{ minWidth: 650 }}\r\n                            size=\"small\"\r\n                            aria-label=\"a dense table\"\r\n                        >\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell align=\"center\">Lp. </TableCell>\r\n                                    <TableCell align=\"center\">Nazwa</TableCell>\r\n                                    <TableCell align=\"center\">Producent</TableCell>\r\n                                    <TableCell align=\"center\">Liczba i rodzaj silników</TableCell>\r\n                                    <TableCell align=\"center\">Maksymalny udźwig [kg]</TableCell>\r\n                                    <TableCell align=\"center\">Waga całkowita [kg]</TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                        Maksymalna prędkość [km/h]\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">Metoda startu</TableCell>\r\n                                    <TableCell align=\"right\">Więcej</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {filterd_data.map((row) => (\r\n\r\n                                    < TableRow\r\n                                        hover\r\n                                        key={row.prop.key}\r\n                                        sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                                    >\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.prop.key}\r\n                                        </TableCell>\r\n\r\n                                        <TableCell align=\"left\">{row.prop.NAZWA}</TableCell>\r\n                                        <TableCell align=\"left\">{row.prop.PRODUCENT}</TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            {row.prop.liczba_i_rodzaj_silników}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.prop.maksymalny_udźwig}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.prop.waga_całkowita}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            {row.prop.maksymalna_prędkość}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.prop.metoda_startu}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            <Link to={row.prop.key}>\r\n                                                <ManageSearchIcon />\r\n                                            </Link>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                }\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default List_rewiev;","C:\\Users\\ngaje\\Desktop\\ProjektPrGeo\\projekt-zajecia\\src\\bspLib\\bsp_data.js",[],[],{"ruleId":"83","severity":1,"message":"84","line":14,"column":11,"nodeType":"85","messageId":"86","endLine":14,"endColumn":14},{"ruleId":"83","severity":1,"message":"87","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":11},{"ruleId":"83","severity":1,"message":"88","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":19},{"ruleId":"83","severity":1,"message":"89","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":18,"column":64,"nodeType":"92","messageId":"93","endLine":18,"endColumn":66},"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'Map' is defined but never used.","'WeatherCard' is defined but never used.","'getItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]